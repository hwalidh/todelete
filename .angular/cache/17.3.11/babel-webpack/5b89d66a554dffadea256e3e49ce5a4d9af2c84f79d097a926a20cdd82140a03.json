{"ast":null,"code":"import _asyncToGenerator from \"/home/hwalidh/todelete/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport emailjs from '@emailjs/browser';\nimport * as i0 from \"@angular/core\";\nexport class EmailService {\n  constructor() {\n    this.PUBLIC_KEY = 'NnBbZBZ1s92vIo5CK';\n    this.SERVICE_ID = 'service_mynhvri';\n    this.TEMPLATES = {\n      TRAVEL: 'template_dkqxg6j',\n      BUSINESS: 'template_za456ha',\n      // Temporarily use business template for serenity pack\n      SERENITY: 'template_za456ha'\n    };\n    this.initialized = false;\n    this.initEmailJS();\n  }\n  initEmailJS() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.initialized) {\n        try {\n          yield emailjs.init(_this.PUBLIC_KEY);\n          _this.initialized = true;\n        } catch (error) {\n          console.error('Failed to initialize EmailJS:', error);\n        }\n      }\n    })();\n  }\n  sendTravelPackEmail(params) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const formattedParams = _this2.formatTravelPackParams(params);\n      return _this2.sendEmailTemplate(_this2.TEMPLATES.TRAVEL, formattedParams);\n    })();\n  }\n  sendBusinessPackEmail(params) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const formattedParams = _this3.formatBusinessPackParams(params);\n      return _this3.sendEmailTemplate(_this3.TEMPLATES.BUSINESS, formattedParams);\n    })();\n  }\n  sendSerenityPackEmail(params) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const formattedParams = _this4.formatSerenityPackParams(params);\n      return _this4.sendEmailTemplate(_this4.TEMPLATES.SERENITY, formattedParams);\n    })();\n  }\n  sendEmailTemplate(templateId, params) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (!_this5.initialized) {\n          yield _this5.initEmailJS();\n        }\n        const response = yield emailjs.send(_this5.SERVICE_ID, templateId, params);\n        return response.status === 200;\n      } catch (error) {\n        console.error('Erreur lors de l\\'envoi de l\\'email:', error);\n        return false;\n      }\n    })();\n  }\n  formatTravelPackParams(params) {\n    const formattedDate = date => {\n      if (!date) return 'Non spécifié';\n      return new Date(date).toLocaleDateString('fr-FR', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      });\n    };\n    return {\n      ...params,\n      subject: `Nouvelle demande Travel Pack - ${params.from_name}`,\n      property_type: params.propertyType || 'Non spécifié',\n      property_style: params.propertyStyle || 'Non spécifié',\n      surface: params.surface ? `${params.surface} m²` : 'Non spécifiée',\n      location: params.location || 'Non spécifiée',\n      availability_start: formattedDate(params.availabilityStart),\n      availability_end: formattedDate(params.availabilityEnd),\n      property_details: `\n🏠 DÉTAILS DU BIEN\n──────────────\n• Type de bien : ${params.propertyType || 'Non spécifié'}\n• Style : ${params.propertyStyle || 'Non spécifié'}\n• Surface : ${params.surface ? params.surface + ' m²' : 'Non spécifiée'}\n• Localisation : ${params.location || 'Non spécifiée'}\n\n📅 DISPONIBILITÉS\n──────────────\n• Du : ${formattedDate(params.availabilityStart)}\n• Au : ${formattedDate(params.availabilityEnd)}\n\n👤 INFORMATIONS CLIENT\n──────────────\n• Nom : ${params.from_name}\n• Email : ${params.from_email}\n\n💭 MESSAGE\n──────────────\n${params.message || 'Aucun message supplémentaire'}\n\n──────────────\nEnvoyé depuis StayFlex Conciergerie\n      `.trim()\n    };\n  }\n  formatBusinessPackParams(params) {\n    const investmentTypes = {\n      'existing': 'Biens déjà en location',\n      'new': 'Nouveau projet',\n      'mix': 'Mix des deux'\n    };\n    return {\n      ...params,\n      subject: `Nouvelle demande Business Pack - ${params.from_name}`,\n      property_count: params.propertyCount || 'Non spécifié',\n      investment_type: params.investmentType ? investmentTypes[params.investmentType] : 'Non spécifié',\n      current_revenue: params.currentRevenue || 'Non spécifié',\n      business_details: `\n💼 DÉTAILS BUSINESS\n──────────────\n• Nombre de biens : ${params.propertyCount || 'Non spécifié'}\n• Type d'investissement : ${params.investmentType ? investmentTypes[params.investmentType] : 'Non spécifié'}\n• Revenus actuels : ${params.currentRevenue || 'Non spécifiés'}\n\n👤 INFORMATIONS CLIENT\n──────────────\n• Nom : ${params.from_name}\n• Email : ${params.from_email}\n\n💭 MESSAGE\n──────────────\n${params.message || 'Aucun message supplémentaire'}\n\n──────────────\nEnvoyé depuis StayFlex Conciergerie\n      `.trim()\n    };\n  }\n  formatSerenityPackParams(params) {\n    return {\n      ...params,\n      subject: `Nouvelle demande Serenity Pack - ${params.from_name}`,\n      property_details: `\n🏠 DÉTAILS DU BIEN\n──────────────\n• Type de bien : ${params.propertyType || 'Non spécifié'}\n• Surface : ${params.surface ? params.surface + ' m²' : 'Non spécifiée'}\n• Localisation : ${params.location || 'Non spécifiée'}\n• Loyer actuel : ${params.currentRent || 'Non spécifié'}\n• Valeur du bien : ${params.propertyValue || 'Non spécifiée'}\n\n👤 INFORMATIONS CLIENT\n──────────────\n• Nom : ${params.from_name}\n• Email : ${params.from_email}\n\n💭 MESSAGE\n──────────────\n${params.message || 'Aucun message supplémentaire'}\n\n──────────────\nEnvoyé depuis StayFlex Conciergerie\n      `.trim()\n    };\n  }\n  static {\n    this.ɵfac = function EmailService_Factory(t) {\n      return new (t || EmailService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EmailService,\n      factory: EmailService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["emailjs","EmailService","constructor","PUBLIC_KEY","SERVICE_ID","TEMPLATES","TRAVEL","BUSINESS","SERENITY","initialized","initEmailJS","_this","_asyncToGenerator","init","error","console","sendTravelPackEmail","params","_this2","formattedParams","formatTravelPackParams","sendEmailTemplate","sendBusinessPackEmail","_this3","formatBusinessPackParams","sendSerenityPackEmail","_this4","formatSerenityPackParams","templateId","_this5","response","send","status","formattedDate","date","Date","toLocaleDateString","day","month","year","subject","from_name","property_type","propertyType","property_style","propertyStyle","surface","location","availability_start","availabilityStart","availability_end","availabilityEnd","property_details","from_email","message","trim","investmentTypes","property_count","propertyCount","investment_type","investmentType","current_revenue","currentRevenue","business_details","currentRent","propertyValue","factory","ɵfac","providedIn"],"sources":["/home/hwalidh/todelete/src/app/services/email.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport emailjs from '@emailjs/browser';\nimport { EmailTemplateParams, TravelPackEmailParams, BusinessPackEmailParams, SerenityPackEmailParams } from '../models/email.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n  private readonly PUBLIC_KEY = 'NnBbZBZ1s92vIo5CK';\n  private readonly SERVICE_ID = 'service_mynhvri';\n  private readonly TEMPLATES = {\n    TRAVEL: 'template_dkqxg6j',\n    BUSINESS: 'template_za456ha',\n    // Temporarily use business template for serenity pack\n    SERENITY: 'template_za456ha'\n  };\n  private initialized = false;\n\n  constructor() {\n    this.initEmailJS();\n  }\n\n  private async initEmailJS() {\n    if (!this.initialized) {\n      try {\n        await emailjs.init(this.PUBLIC_KEY);\n        this.initialized = true;\n      } catch (error) {\n        console.error('Failed to initialize EmailJS:', error);\n      }\n    }\n  }\n\n  async sendTravelPackEmail(params: TravelPackEmailParams): Promise<boolean> {\n    const formattedParams = this.formatTravelPackParams(params);\n    return this.sendEmailTemplate(this.TEMPLATES.TRAVEL, formattedParams);\n  }\n\n  async sendBusinessPackEmail(params: BusinessPackEmailParams): Promise<boolean> {\n    const formattedParams = this.formatBusinessPackParams(params);\n    return this.sendEmailTemplate(this.TEMPLATES.BUSINESS, formattedParams);\n  }\n\n  async sendSerenityPackEmail(params: SerenityPackEmailParams): Promise<boolean> {\n    const formattedParams = this.formatSerenityPackParams(params);\n    return this.sendEmailTemplate(this.TEMPLATES.SERENITY, formattedParams);\n  }\n\n  private async sendEmailTemplate(templateId: string, params: EmailTemplateParams): Promise<boolean> {\n    try {\n      if (!this.initialized) {\n        await this.initEmailJS();\n      }\n\n      const response = await emailjs.send(\n        this.SERVICE_ID,\n        templateId,\n        params\n      );\n\n      return response.status === 200;\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi de l\\'email:', error);\n      return false;\n    }\n  }\n\n  private formatTravelPackParams(params: TravelPackEmailParams): EmailTemplateParams {\n    const formattedDate = (date: string) => {\n      if (!date) return 'Non spécifié';\n      return new Date(date).toLocaleDateString('fr-FR', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      });\n    };\n\n    return {\n      ...params,\n      subject: `Nouvelle demande Travel Pack - ${params.from_name}`,\n      property_type: params.propertyType || 'Non spécifié',\n      property_style: params.propertyStyle || 'Non spécifié',\n      surface: params.surface ? `${params.surface} m²` : 'Non spécifiée',\n      location: params.location || 'Non spécifiée',\n      availability_start: formattedDate(params.availabilityStart),\n      availability_end: formattedDate(params.availabilityEnd),\n      property_details: `\n🏠 DÉTAILS DU BIEN\n──────────────\n• Type de bien : ${params.propertyType || 'Non spécifié'}\n• Style : ${params.propertyStyle || 'Non spécifié'}\n• Surface : ${params.surface ? params.surface + ' m²' : 'Non spécifiée'}\n• Localisation : ${params.location || 'Non spécifiée'}\n\n📅 DISPONIBILITÉS\n──────────────\n• Du : ${formattedDate(params.availabilityStart)}\n• Au : ${formattedDate(params.availabilityEnd)}\n\n👤 INFORMATIONS CLIENT\n──────────────\n• Nom : ${params.from_name}\n• Email : ${params.from_email}\n\n💭 MESSAGE\n──────────────\n${params.message || 'Aucun message supplémentaire'}\n\n──────────────\nEnvoyé depuis StayFlex Conciergerie\n      `.trim()\n    };\n  }\n\n  private formatBusinessPackParams(params: BusinessPackEmailParams): EmailTemplateParams {\n    const investmentTypes = {\n      'existing': 'Biens déjà en location',\n      'new': 'Nouveau projet',\n      'mix': 'Mix des deux'\n    };\n\n    return {\n      ...params,\n      subject: `Nouvelle demande Business Pack - ${params.from_name}`,\n      property_count: params.propertyCount || 'Non spécifié',\n      investment_type: params.investmentType ? investmentTypes[params.investmentType as keyof typeof investmentTypes] : 'Non spécifié',\n      current_revenue: params.currentRevenue || 'Non spécifié',\n      business_details: `\n💼 DÉTAILS BUSINESS\n──────────────\n• Nombre de biens : ${params.propertyCount || 'Non spécifié'}\n• Type d'investissement : ${params.investmentType ? investmentTypes[params.investmentType as keyof typeof investmentTypes] : 'Non spécifié'}\n• Revenus actuels : ${params.currentRevenue || 'Non spécifiés'}\n\n👤 INFORMATIONS CLIENT\n──────────────\n• Nom : ${params.from_name}\n• Email : ${params.from_email}\n\n💭 MESSAGE\n──────────────\n${params.message || 'Aucun message supplémentaire'}\n\n──────────────\nEnvoyé depuis StayFlex Conciergerie\n      `.trim()\n    };\n  }\n\n  private formatSerenityPackParams(params: SerenityPackEmailParams): EmailTemplateParams {\n    return {\n      ...params,\n      subject: `Nouvelle demande Serenity Pack - ${params.from_name}`,\n      property_details: `\n🏠 DÉTAILS DU BIEN\n──────────────\n• Type de bien : ${params.propertyType || 'Non spécifié'}\n• Surface : ${params.surface ? params.surface + ' m²' : 'Non spécifiée'}\n• Localisation : ${params.location || 'Non spécifiée'}\n• Loyer actuel : ${params.currentRent || 'Non spécifié'}\n• Valeur du bien : ${params.propertyValue || 'Non spécifiée'}\n\n👤 INFORMATIONS CLIENT\n──────────────\n• Nom : ${params.from_name}\n• Email : ${params.from_email}\n\n💭 MESSAGE\n──────────────\n${params.message || 'Aucun message supplémentaire'}\n\n──────────────\nEnvoyé depuis StayFlex Conciergerie\n      `.trim()\n    };\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}